# cloudbuild.yaml

substitutions:
  _ARTIFACT_REGISTRY_LOCATION: 'us-central1'
  _ARTIFACT_REGISTRY_REPO: 'feishu-kang'
  _IMAGE_NAME: 'feishu-kang' # 您的应用程序/镜像的基础名称
  _TAG: '$SHORT_SHA'

  # Cloud Deploy 配置
  _CD_PIPELINE: 'feishu-notification-pipeline' # 必须与 clouddeploy.yaml 中的 DeliveryPipeline 名称匹配
  _CD_REGION: 'us-central1'                  # 您的 Cloud Deploy 流水线区域 (例如 us-central1, asia-east1)
  _SKAFFOLD_FILE_PATH: 'skaffold.yaml'       # 指向您的 skaffold.yaml 文件

  # Kubernetes 清单中使用的镜像占位符名称
  # 这个名称将作为 --images 标志的键 (KEY=VALUE)
  _K8S_IMAGE_PLACEHOLDER_NAME: 'FEISHU_APP_IMAGE_PLACEHOLDER' # <--- 与 k8s/deployment.yaml 中的 image 字段匹配

steps:
  # ... (步骤 0: 单元测试 - 保持不变) ...

  # 步骤 1: 构建 Docker 镜像
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image' # 中文ID：“构建 Docker 镜像”
    args:
      - 'build'
      - '-t'
      - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${_TAG}'
      # 移除 temp_build 标签，因为 --images 标志将直接使用带 $SHORT_SHA 的标签
      - '.'
    # waitFor: ['单元测试'] # 中文ID：“单元测试”

  # 步骤 2: 将 Docker 镜像推送到 Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image to Artifact Registry' # 中文ID：“推送 Docker 镜像 (SHA 标记)”
    args:
      - 'push'
      - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${_TAG}'
    waitFor: ['Build Docker Image'] # 中文ID：“构建 Docker 镜像”

  # 步骤 3: (可选) 主分支的 latest 标签逻辑可以保留，但确保不与 Cloud Deploy 流程冲突
  # 如果 Cloud Deploy 总是使用带 SHA 的标签，这个 latest 标签更多是用于其他目的。
  # ... (如果您需要，可以保留原来的步骤 3，但确保它不会干扰Cloud Deploy的镜像选择)

  # 步骤 4: 创建 Cloud Deploy Release (根据最新指南调整)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim' # 使用 :slim 或 :alpine 确保 gcloud 版本较新
    id: 'Create Cloud Deploy Release' # 中文ID：“创建 Cloud Deploy Release”
    entrypoint: 'gcloud'
    args:
      - 'deploy'
      - 'releases'
      - 'create'
      - '${_IMAGE_NAME}-release-${_TAG}' # Release 名称
      - '--project=$PROJECT_ID'
      - '--delivery-pipeline=${_CD_PIPELINE}'
      - '--region=${_CD_REGION}'
      - '--skaffold-file=${_SKAFFOLD_FILE_PATH}'
      # 使用 --images 标志，将 K8s 清单中的占位符映射到实际构建的镜像 URI
      - '--images=${_K8S_IMAGE_PLACEHOLDER_NAME}=${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${_TAG}'
      - '--description="Release triggered by Cloud Build $BUILD_ID for commit $SHORT_SHA"'
    waitFor:
      - 'Push Docker Image to Artifact Registry' # 中文ID：“推送 Docker 镜像 (SHA 标记)”

images:
  - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${_TAG}'

options:
  logging: CLOUD_LOGGING_ONLY
timeout: '1800s' # 30 分钟
